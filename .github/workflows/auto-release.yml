name: Auto Release on Version Bump

on:
  push:
    branches: [main]
    paths:
      - "package.json"
  workflow_dispatch:

jobs:
  check-version-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version from package.json
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $VERSION"

      - name: Check if tag exists
        id: tag-check
        run: |
          if git rev-parse "v${{ steps.version.outputs.version }}" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Tag v${{ steps.version.outputs.version }} already exists"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Tag v${{ steps.version.outputs.version }} does not exist"
          fi

      - name: Setup Node.js
        if: steps.tag-check.outputs.exists == 'false'
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        if: steps.tag-check.outputs.exists == 'false'
        run: npm ci

      - name: Compile TypeScript
        if: steps.tag-check.outputs.exists == 'false'
        run: npm run compile

      - name: Run tests
        if: steps.tag-check.outputs.exists == 'false'
        run: npm test

      - name: Install vsce
        if: steps.tag-check.outputs.exists == 'false'
        run: npm install -g vsce

      - name: Package extension
        if: steps.tag-check.outputs.exists == 'false'
        run: vsce package

      - name: Create Git Tag
        if: steps.tag-check.outputs.exists == 'false'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a "v${{ steps.version.outputs.version }}" -m "Release v${{ steps.version.outputs.version }}"
          git push origin "v${{ steps.version.outputs.version }}"

      - name: Create Release
        if: steps.tag-check.outputs.exists == 'false'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            promptious-optimizer-*.vsix
          tag_name: v${{ steps.version.outputs.version }}
          name: Promptious Optimizer v${{ steps.version.outputs.version }}
          body: |
            ## ðŸŽ‰ Promptious Optimizer VS Code Extension v${{ steps.version.outputs.version }}

            ### Features
            - AI-powered prompt optimization using advanced techniques
            - History tracking and management
            - Easy configuration and setup
            - Lightweight and fast

            ### Installation
            1. Download `promptious-optimizer-${{ steps.version.outputs.version }}.vsix`
            2. Open VS Code
            3. Go to Extensions (Ctrl+Shift+X)
            4. Click "..." â†’ "Install from VSIX..."
            5. Select the downloaded file

            ### Requirements
            - VS Code 1.74.0+
            - OpenAI API key
            - Promptious backend running

            ### Usage
            1. Select text in any editor
            2. Right-click â†’ "Optimize Selected Text"
            3. Review results in new document

            ### Support
            - [GitHub Issues](https://github.com/sumitnemade/promptious/issues)
            - Contact: nemadesumit@gmail.com
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
